version: "3.9"
networks:
  proxy-network:
    external: true
  server-network:
    driver: bridge

volumes:
  db-data: {}
  file-data: {}
  cache-data: {}

services:
  reverse-proxy:
    image: traefik:v2.4
    container_name: reverse-proxy-traefik
    restart: unless-stopped
    networks:
      - proxy-network
    environment:
      - CF_API_EMAIL=${APP_SECRET_CF_API_EMAIL}
      - CF_API_KEY=${APP_SECRET_CF_API_KEY}
      - APP_DOMAIN=${APP_DOMAIN}
      - APP_WEBRTC_DOMAIN=${APP_WEBRTC_DOMAIN}
      - APP_WEBRTC_TURN_DOMAIN=${APP_WEBRTC_TURN_DOMAIN}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ../traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ../traefik/dynamic.yml:/etc/config/dynamic.yml

  webui:
    container_name: webui-react
    build:
      context: ../client
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - proxy-network

  webapi:
    container_name: webapi-nest
    build:
      context: ../server
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 5000:5000
    environment:
      - DB_HOST=${APP_SECRET_DB_HOST}
      - DB_PORT=${APP_SECRET_DB_PORT}
      - DB_USER=${APP_SECRET_DB_USER}
      - DB_PASSWORD=${APP_SECRET_DB_PASSWORD}
      - DB_NAME=${APP_SECRET_DB_NAME}

      - REDIS_HOST=${APP_SECRET_REDIS_HOST}
      - REDIS_PORT=${APP_SECRET_REDIS_PORT}
      - REDIS_PASS=${APP_SECRET_REDIS_PASSWORD}

      - WEBRTC_LIVEKIT_API_HOST=${APP_SECRET_LIVEKIT_API_HOST}
      - WEBRTC_LIVEKIT_CLIENT_ID=${APP_SECRET_LIVEKIT_API_KEY}
      - WEBRTC_LIVEKIT_CLIENT_SECRET=${APP_SECRET_LIVEKIT_API_SECRET}
    networks:
      - proxy-network
      - server-network
    volumes:
      - file-data:/var/data
    depends_on:
      - db
      - db-cache
      - webrtc-server

  # webrtc-egress:
  #   container_name: webrtc-egress-livekit
  #   image: livekit/egress:latest
  #   restart: unless-stopped
  #   environment:
  #     - EGRESS_CONFIG_FILE=/etc/egress.yaml
  #   networks:
  #     - server-network
  #   volumes:
  #     - ../livekit/egress.yaml:/etc/egress.yaml
  #   cap_add:
  #     - CAP_SYS_ADMIN

  webrtc-server:
    container_name: webrtc-server-livekit
    image: livekit/livekit-server:v1.5
    command: --config /etc/livekit.yaml
    restart: unless-stopped
    ports:
      - 7880:7880
      - 7881:7881/tcp
      - 7882:7882/udp
    volumes:
      - ../livekit/livekit.yaml:/etc/livekit.yaml
    networks:
      - proxy-network
      - server-network
    depends_on:
      - db-cache

  db:
    container_name: db-postgres
    image: postgres:12
    restart: unless-stopped
    ports:
      - ${APP_SECRET_DB_PORT}:5432
    networks:
      - server-network
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${APP_SECRET_DB_USER}
      - POSTGRES_PASSWORD=${APP_SECRET_DB_PASSWORD}
      - POSTGRES_DB=${APP_SECRET_DB_NAME}

  db-cache:
    container_name: db-cache-redis
    image: redis:7
    restart: unless-stopped
    ports:
      - ${APP_SECRET_REDIS_PORT}:6379
    command: >
      redis-server 
      --save $APP_SECRET_REDIS_SAVE_INTERVAL $APP_SECRET_REDIS_SAVE_CHANGES 
      --loglevel $APP_SECRET_REDIS_LOGLEVEL
      --requirepass $APP_SECRET_REDIS_PASSWORD
    volumes:
      - cache-data:/data
    networks:
      - server-network
