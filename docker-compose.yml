version: "3.9"
networks:
  proxy-network:
  server-network:
    driver: bridge

volumes:
  db-data: {}
  file-data: {}
  cache-data: {}

services:
  reverse-proxy:
    image: traefik:v2.4
    container_name: reverse-proxy-traefik
    networks:
      - proxy-network
    ports:
      - mode: host
        published: 80
        target: 80
      - mode: host
        published: 443
        target: 443
      - mode: host
        published: 8080
        target: 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./traefik/dynamic.yml:/etc/config/dynamic.yml
      - ./traefik/gdscmeet.key:/etc/config/gdscmeet.key:ro
      - ./traefik/gdscmeet.crt:/etc/config/gdscmeet.crt:ro

  webui:
    container_name: webui-react
    build:
      context: ../client-gdsc-meet
      dockerfile: Dockerfile
    restart: always
    networks:
      - proxy-network

  webapi:
    container_name: webapi-nest
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    networks:
      - proxy-network
      - server-network
    volumes:
      - file-data:/var/data
    depends_on:
      - db
      - db-cache
      - webrtc-server

  # webrtc-egress:
  #   container_name: livekit_egress
  #   image: livekit/egress:latest
  #   restart: unless-stopped
  #   environment:
  #     - EGRESS_CONFIG_FILE=/etc/egress.yaml
  #   network_mode: "host"
  #   volumes:
  #     - ./egress.yaml:/etc/egress.yaml
  #   cap_add:
  #     - CAP_SYS_ADMIN

  webrtc-server:
    container_name: webrtc-server-livekit
    image: livekit/livekit-server:v1.5
    command: --config /etc/livekit.yaml
    restart: unless-stopped
    ports:
      - 7881:7881/tcp
      - 7882:7882/udp # If using port 7882, there is no need to open 50000/60000 udp ports
      # - 50000-60000:50000-60000/udp
    volumes:
      - ./livekit/livekit.yaml:/etc/livekit.yaml
    networks:
      - proxy-network
      - server-network
    depends_on:
      - db-cache

  db:
    container_name: db-postgres
    image: postgres:12
    restart: always
    ports:
      - 5433:5432
    networks:
      - server-network
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=postgres

  db-cache:
    container_name: db-cache-redis
    image: redis:7
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass mypass
    volumes:
      - cache-data:/data
    networks:
      - server-network
